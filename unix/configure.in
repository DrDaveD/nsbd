dnl Process this file with autoconf to produce a configure script for NSBD.
dnl
dnl Copyright (C) 1996-2003 by Dave Dykstra and Lucent Technologies
dnl
dnl This program is free software; you can redistribute it and/or modify
dnl it under the terms of the GNU General Public License as published by
dnl the Free Software Foundation; either version 2 of the License, or
dnl (at your option) any later version.
dnl
dnl This program is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl GNU General Public License for more details.
dnl
AC_INIT(nsbdInit.c)

CONF_CFLAGS=""
CONF_LD_SEARCH_FLAGS=""

AC_PATH_PROG(TCLSH, tclsh)
if test -z "$TCLSH"; then
    echo "Error - Can't find tclsh; it must be in your PATH to continue"
    exit 1
fi

AC_MSG_CHECKING(location of tclConfig.sh)
tcllib=
tclversion=
eval `echo 'puts "tcllib=[[file dirname [info library]]]"; \
            puts "tclversion=[[info tclversion]]"; \
	    exit' | $TCLSH`
if test "${tcllib}" = ""; then
    echo "Error - $TCLSH couldn't determine its library"
    exit 1
fi
TCL_LIBRARY="$tcllib"
if test ! -f $tcllib/tclConfig.sh; then
    othertcllib="`dirname $tcllib`/lib"
    if test -f $othertcllib/tclConfig.sh; then
	tcllib="$othertcllib"
    else
	echo "Error - could not find tclConfig.sh in $tcllib or $othertcllib"
	exit 1
    fi
fi
if test -f $tcllib/tclConfig$tclversion.sh; then
    tclconfig=tclConfig$tclversion.sh
    tkconfig=tkConfig$tclversion.sh
else
    tclconfig=tclConfig.sh
    tkconfig=tkConfig.sh
fi
AC_MSG_RESULT($tcllib/$tclconfig)

. $tcllib/$tclconfig

tklib=""
AC_MSG_CHECKING(whether to include TK (and therefore nsbd -register))
AC_ARG_WITH(tk,
[  --without-tk		  Don't include a TK Graphical User Interface (lose -register)],
[   AC_MSG_RESULT($withval)
    if test "$withval" = yes
    then
	tklib=$tcllib
	if test ! -f $tklib/$tkconfig
	then
	    echo "Error - --with-tk set and $tklib/$tkconfig doesn't exist"
	    exit 1
	fi
    fi ],
[   if test -f $tcllib/$tkconfig
    then
	AC_MSG_RESULT(yes)
	tklib=$tcllib
    else
	AC_MSG_RESULT(no)
    fi]
)

TCL_LIBFILES="$TCL_LIBRARY/tcl$TCL_VERSION/*.tcl $TCL_LIBRARY/tcl$TCL_VERSION/tclIndex"
if test -n "$tklib"
then
    AC_MSG_CHECKING(location of tkConfig.sh)
    AC_MSG_RESULT($tklib/$tkconfig)
    . $tklib/$tkconfig
    TK_LIBFILES="$TCL_LIBRARY/tk$TCL_VERSION/*.tcl $TCL_LIBRARY/tk$TCL_VERSION/tclIndex"
else
    CONF_CFLAGS="$CONF_CFLAGS -DWITHOUT_TK"
    TK_LIBFILES=""
fi

# explicitly refer to the TCL and TK '.a' files, skipping any possible
#   shared object libraries.  This is more portable than using -Bdynamic.
VERSION=$TCL_VERSION
eval "TCL_UNSHARED_LIB_SPEC=$TCL_PREFIX/lib/libtcl$TCL_UNSHARED_LIB_SUFFIX"
if test -n "$tklib"
then
    VERSION=$TK_VERSION
    eval "TK_UNSHARED_LIB_SPEC=$TK_PREFIX/lib/libtk$TCL_UNSHARED_LIB_SUFFIX"
fi

dnl Checks for programs.
AC_PROG_INSTALL
AC_PROG_AWK



TCL2C=
AC_MSG_CHECKING(what to use for standalone binaries)
AC_ARG_WITH(tcl2c,
[  --with-tcl2c=PATH_TO_TCL2C  Use tcl2c and plus patches for standalone binaries],
[
    AC_MSG_RESULT(tcl2c)
    TCL2C=$withval
    AC_SUBST(TCL2C)
    DEFAULT_NSBD=nsbdT2c
],
[
    AC_MSG_RESULT(mktclapp)
    DEFAULT_NSBD=nsbdApp
]
)



dnl Checks for libraries.

dnl Checks for header files.
# defines STDC_HEADERS if stdlib.h exists
AC_HEADER_STDC

dnl Checks for typedefs, structures, and compiler characteristics.

AC_MSG_CHECKING([for HPUX shared library system])
if test -x /lib/dld.sl
then
    AC_MSG_RESULT([yes])
    # this supports having the HPUX dynamic loader to use the SHLIB_PATH
    #   to look for shared dynamic libraries
    CONF_LD_SEARCH_FLAGS="$CONF_LD_SEARCH_FLAGS -Wl,+s"
    if test -n "$TCL2C"
    then
	# this is not part of the HPUX shared library system, but I don't
	#   have the time to make a separate test for it right now.
	#   The -H compile option is to allow compilation of long strings
	#   created by the output of tcl2c.  
	# later: this is failing on gcc 3.0.4 and I am not using tcl2c
	#   right now anyway so only add the option if tcl2c is selected
	CONF_CFLAGS="$CONF_CFLAGS -Wp,-H10240"
    fi
else
    AC_MSG_RESULT([no])
fi

dnl Checks for library functions.
AC_TYPE_SIGNAL
AC_CHECK_FUNCS(strerror)

dnl Substitutions
AC_SUBST(DEFAULT_NSBD)
AC_SUBST(AWK)
dnl Don't use the install program that configure finds. AC_SUBST(INSTALL)
AC_SUBST(INSTALL_PROGRAM)
AC_SUBST(INSTALL_DATA)
AC_SUBST(TCL_CC)
AC_SUBST(TCL_CFLAGS)
AC_SUBST(TCL_DEFS)
AC_SUBST(CONF_CFLAGS)
AC_SUBST(TCL_PREFIX)
AC_SUBST(TCL_LIB_SPEC)
AC_SUBST(TK_LIB_SPEC)
AC_SUBST(TCL_UNSHARED_LIB_SPEC)
AC_SUBST(TK_UNSHARED_LIB_SPEC)
AC_SUBST(TCL_LD_SEARCH_FLAGS)
AC_SUBST(CONF_LD_SEARCH_FLAGS)
AC_SUBST(TCL_LIBS)
AC_SUBST(TK_LIBS)
AC_SUBST(TCL_VERSION)
AC_SUBST(TK_VERSION)
AC_SUBST(TCL_LIBFILES)
AC_SUBST(TK_LIBFILES)

AC_OUTPUT(Makefile)
